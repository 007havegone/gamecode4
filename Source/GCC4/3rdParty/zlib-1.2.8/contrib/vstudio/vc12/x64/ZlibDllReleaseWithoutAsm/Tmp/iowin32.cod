; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

include listing.inc

INCLUDELIB OLDNAMES

EXTRN	__imp_CloseHandle:PROC
EXTRN	__imp_GetLastError:PROC
EXTRN	__imp_MultiByteToWideChar:PROC
EXTRN	__imp_ReadFile:PROC
EXTRN	__imp_WriteFile:PROC
EXTRN	__imp_SetFilePointerEx:PROC
EXTRN	__imp_CreateFile2:PROC
PUBLIC	fill_win32_filefunc64W
PUBLIC	fill_win32_filefunc64A
PUBLIC	fill_win32_filefunc64
PUBLIC	fill_win32_filefunc
PUBLIC	win32_error_file_func
PUBLIC	win32_close_file_func
PUBLIC	win32_seek64_file_func
PUBLIC	win32_seek_file_func
PUBLIC	win32_tell64_file_func
PUBLIC	win32_tell_file_func
PUBLIC	win32_write_file_func
PUBLIC	win32_read_file_func
PUBLIC	win32_open_file_func
PUBLIC	win32_open64_file_funcW
PUBLIC	win32_open64_file_funcA
PUBLIC	win32_open64_file_func
;	COMDAT pdata
pdata	SEGMENT
$pdata$win32_close_file_func DD imagerel $LN7
	DD	imagerel $LN7+59
	DD	imagerel $unwind$win32_close_file_func
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$win32_seek64_file_func DD imagerel $LN14
	DD	imagerel $LN14+107
	DD	imagerel $unwind$win32_seek64_file_func
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$win32_seek_file_func DD imagerel $LN14
	DD	imagerel $LN14+117
	DD	imagerel $unwind$win32_seek_file_func
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$win32_tell64_file_func DD imagerel $LN10
	DD	imagerel $LN10+83
	DD	imagerel $unwind$win32_tell64_file_func
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$win32_tell_file_func DD imagerel $LN10
	DD	imagerel $LN10+81
	DD	imagerel $unwind$win32_tell_file_func
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$MySetFilePointerEx DD imagerel MySetFilePointerEx
	DD	imagerel MySetFilePointerEx+15
	DD	imagerel $unwind$MySetFilePointerEx
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$win32_write_file_func DD imagerel $LN11
	DD	imagerel $LN11+107
	DD	imagerel $unwind$win32_write_file_func
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$win32_read_file_func DD imagerel $LN11
	DD	imagerel $LN11+107
	DD	imagerel $unwind$win32_read_file_func
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$win32_open_file_func DD imagerel $LN5
	DD	imagerel $LN5+160
	DD	imagerel $unwind$win32_open_file_func
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$win32_open64_file_funcW DD imagerel $LN5
	DD	imagerel $LN5+100
	DD	imagerel $unwind$win32_open64_file_funcW
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$win32_open64_file_funcA DD imagerel $LN5
	DD	imagerel $LN5+160
	DD	imagerel $unwind$win32_open64_file_funcA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$win32_open64_file_func DD imagerel $LN5
	DD	imagerel $LN5+160
	DD	imagerel $unwind$win32_open64_file_func
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$win32_build_iowin DD imagerel win32_build_iowin
	DD	imagerel win32_build_iowin+29
	DD	imagerel $unwind$win32_build_iowin
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$win32_build_iowin DD imagerel win32_build_iowin+29
	DD	imagerel win32_build_iowin+79
	DD	imagerel $chain$0$win32_build_iowin
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$win32_build_iowin DD imagerel win32_build_iowin+79
	DD	imagerel win32_build_iowin+98
	DD	imagerel $chain$2$win32_build_iowin
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$win32_build_iowin DD imagerel win32_build_iowin+98
	DD	imagerel win32_build_iowin+106
	DD	imagerel $chain$3$win32_build_iowin
;	COMDAT xdata
xdata	SEGMENT
$chain$3$win32_build_iowin DD 021H
	DD	imagerel win32_build_iowin
	DD	imagerel win32_build_iowin+29
	DD	imagerel $unwind$win32_build_iowin
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$win32_build_iowin DD 020021H
	DD	083400H
	DD	imagerel win32_build_iowin
	DD	imagerel win32_build_iowin+29
	DD	imagerel $unwind$win32_build_iowin
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$win32_build_iowin DD 020521H
	DD	083405H
	DD	imagerel win32_build_iowin
	DD	imagerel win32_build_iowin+29
	DD	imagerel $unwind$win32_build_iowin
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$win32_build_iowin DD 020601H
	DD	070025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$win32_open64_file_func DD 030901H
	DD	0ca0109H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$win32_open64_file_funcA DD 030901H
	DD	0ca0109H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$win32_open64_file_funcW DD 020601H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$win32_open_file_func DD 030901H
	DD	0ca0109H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$win32_read_file_func DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$win32_write_file_func DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$MySetFilePointerEx DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$win32_tell_file_func DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$win32_tell64_file_func DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$win32_seek_file_func DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$win32_seek64_file_func DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$win32_close_file_func DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File d:\projectsgit\gamecode4\source\gcc4\3rdparty\zlib-1.2.8\contrib\minizip\iowin32.c
;	COMDAT win32_translate_open_mode
_TEXT	SEGMENT
mode$ = 8
lpdwDesiredAccess$ = 16
lpdwCreationDisposition$ = 24
lpdwShareMode$ = 32
lpdwFlagsAndAttributes$ = 40
win32_translate_open_mode PROC				; COMDAT

; 56   :     *lpdwDesiredAccess = *lpdwShareMode = *lpdwFlagsAndAttributes = *lpdwCreationDisposition = 0;

  00000	48 8b 44 24 28	 mov	 rax, QWORD PTR lpdwFlagsAndAttributes$[rsp]
  00005	45 33 d2	 xor	 r10d, r10d
  00008	44 89 10	 mov	 DWORD PTR [rax], r10d

; 57   : 
; 58   :     if ((mode & ZLIB_FILEFUNC_MODE_READWRITEFILTER)==ZLIB_FILEFUNC_MODE_READ)

  0000b	8b c1		 mov	 eax, ecx
  0000d	45 89 10	 mov	 DWORD PTR [r8], r10d
  00010	24 03		 and	 al, 3
  00012	45 89 11	 mov	 DWORD PTR [r9], r10d
  00015	44 89 12	 mov	 DWORD PTR [rdx], r10d
  00018	3c 01		 cmp	 al, 1
  0001a	75 15		 jne	 SHORT $LN5@win32_tran

; 59   :     {
; 60   :         *lpdwDesiredAccess = GENERIC_READ;

  0001c	c7 02 00 00 00
	80		 mov	 DWORD PTR [rdx], -2147483648 ; 80000000H

; 61   :         *lpdwCreationDisposition = OPEN_EXISTING;

  00022	41 c7 00 03 00
	00 00		 mov	 DWORD PTR [r8], 3

; 62   :         *lpdwShareMode = FILE_SHARE_READ;

  00029	41 c7 01 01 00
	00 00		 mov	 DWORD PTR [r9], 1

; 73   :     }
; 74   : }

  00030	c3		 ret	 0
$LN5@win32_tran:

; 63   :     }
; 64   :     else if (mode & ZLIB_FILEFUNC_MODE_EXISTING)

  00031	f6 c1 04	 test	 cl, 4
  00034	74 0e		 je	 SHORT $LN3@win32_tran

; 65   :     {
; 66   :         *lpdwDesiredAccess = GENERIC_WRITE | GENERIC_READ;
; 67   :         *lpdwCreationDisposition = OPEN_EXISTING;

  00036	41 c7 00 03 00
	00 00		 mov	 DWORD PTR [r8], 3

; 70   :     {
; 71   :         *lpdwDesiredAccess = GENERIC_WRITE | GENERIC_READ;

  0003d	c7 02 00 00 00
	c0		 mov	 DWORD PTR [rdx], -1073741824 ; c0000000H

; 73   :     }
; 74   : }

  00043	c3		 ret	 0
$LN3@win32_tran:

; 68   :     }
; 69   :     else if (mode & ZLIB_FILEFUNC_MODE_CREATE)

  00044	f6 c1 08	 test	 cl, 8
  00047	74 0d		 je	 SHORT $LN1@win32_tran

; 72   :         *lpdwCreationDisposition = CREATE_ALWAYS;

  00049	41 c7 00 02 00
	00 00		 mov	 DWORD PTR [r8], 2
  00050	c7 02 00 00 00
	c0		 mov	 DWORD PTR [rdx], -1073741824 ; c0000000H
$LN1@win32_tran:

; 73   :     }
; 74   : }

  00056	c3		 ret	 0
win32_translate_open_mode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\projectsgit\gamecode4\source\gcc4\3rdparty\zlib-1.2.8\contrib\minizip\iowin32.c
;	COMDAT win32_build_iowin
_TEXT	SEGMENT
w32fiow$1 = 32
hFile$ = 64
win32_build_iowin PROC					; COMDAT

; 77   : {

  00000	40 57		 push	 rdi
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8d 41 ff	 lea	 rax, QWORD PTR [rcx-1]
  0000a	48 8b f9	 mov	 rdi, rcx
  0000d	48 83 f8 fd	 cmp	 rax, -3
  00011	77 4f		 ja	 SHORT $LN7@win32_buil

; 78   :     voidpf ret=NULL;
; 79   : 
; 80   :     if ((hFile != NULL) && (hFile != INVALID_HANDLE_VALUE))
; 81   :     {
; 82   :         WIN32FILE_IOWIN w32fiow;
; 83   :         w32fiow.hf = hFile;

  00013	48 89 4c 24 20	 mov	 QWORD PTR w32fiow$1[rsp], rcx

; 84   :         w32fiow.error = 0;
; 85   :         ret = malloc(sizeof(WIN32FILE_IOWIN));

  00018	b9 10 00 00 00	 mov	 ecx, 16
  0001d	48 89 5c 24 40	 mov	 QWORD PTR [rsp+64], rbx
  00022	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR w32fiow$1[rsp+8], 0
  0002a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_malloc
  00030	48 8b d8	 mov	 rbx, rax

; 86   : 
; 87   :         if (ret==NULL)

  00033	48 85 c0	 test	 rax, rax
  00036	75 17		 jne	 SHORT $LN2@win32_buil

; 88   :             CloseHandle(hFile);

  00038	48 8b cf	 mov	 rcx, rdi
  0003b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CloseHandle

; 91   :     }
; 92   :     return ret;

  00041	48 8b c3	 mov	 rax, rbx
  00044	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]

; 93   : }

  00049	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004d	5f		 pop	 rdi
  0004e	c3		 ret	 0
$LN2@win32_buil:

; 89   :         else
; 90   :             *((WIN32FILE_IOWIN*)ret) = w32fiow;

  0004f	0f 10 44 24 20	 movups	 xmm0, XMMWORD PTR w32fiow$1[rsp]
  00054	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00059	0f 11 00	 movups	 XMMWORD PTR [rax], xmm0

; 93   : }

  0005c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00060	5f		 pop	 rdi
  00061	c3		 ret	 0
$LN7@win32_buil:

; 91   :     }
; 92   :     return ret;

  00062	33 c0		 xor	 eax, eax

; 93   : }

  00064	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00068	5f		 pop	 rdi
  00069	c3		 ret	 0
win32_build_iowin ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\projectsgit\gamecode4\source\gcc4\3rdparty\zlib-1.2.8\contrib\minizip\iowin32.c
;	COMDAT win32_open64_file_func
_TEXT	SEGMENT
dwShareMode$ = 48
dwFlagsAndAttributes$ = 52
filenameW$1 = 64
opaque$ = 1632
dwDesiredAccess$ = 1640
filename$ = 1640
mode$ = 1648
dwCreationDisposition$ = 1656
win32_open64_file_func PROC				; COMDAT

; 96   : {

$LN5:
  00000	40 57		 push	 rdi
  00002	48 81 ec 50 06
	00 00		 sub	 rsp, 1616		; 00000650H
  00009	41 8b c0	 mov	 eax, r8d

; 97   :     const char* mode_fopen = NULL;
; 98   :     DWORD dwDesiredAccess,dwCreationDisposition,dwShareMode,dwFlagsAndAttributes ;
; 99   :     HANDLE hFile = NULL;
; 100  : 
; 101  :     win32_translate_open_mode(mode,&dwDesiredAccess,&dwCreationDisposition,&dwShareMode,&dwFlagsAndAttributes);

  0000c	48 8d 4c 24 34	 lea	 rcx, QWORD PTR dwFlagsAndAttributes$[rsp]
  00011	4c 8b da	 mov	 r11, rdx
  00014	4c 8d 4c 24 30	 lea	 r9, QWORD PTR dwShareMode$[rsp]
  00019	4c 8d 84 24 78
	06 00 00	 lea	 r8, QWORD PTR dwCreationDisposition$[rsp]
  00021	48 8d 94 24 68
	06 00 00	 lea	 rdx, QWORD PTR dwDesiredAccess$[rsp]
  00029	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0002e	8b c8		 mov	 ecx, eax
  00030	33 ff		 xor	 edi, edi
  00032	e8 00 00 00 00	 call	 win32_translate_open_mode

; 102  : 
; 103  : #ifdef IOWIN32_USING_WINRT_API
; 104  : #ifdef UNICODE
; 105  :     if ((filename!=NULL) && (dwDesiredAccess != 0))
; 106  :         hFile = CreateFile2((LPCTSTR)filename, dwDesiredAccess, dwShareMode, dwCreationDisposition, NULL);
; 107  : #else
; 108  :     if ((filename!=NULL) && (dwDesiredAccess != 0))

  00037	4d 85 db	 test	 r11, r11
  0003a	74 53		 je	 SHORT $LN1@win32_open
  0003c	39 bc 24 68 06
	00 00		 cmp	 DWORD PTR dwDesiredAccess$[rsp], edi
  00043	74 4a		 je	 SHORT $LN1@win32_open

; 109  :     {
; 110  :         WCHAR filenameW[FILENAME_MAX + 0x200 + 1];
; 111  :         MultiByteToWideChar(CP_ACP,0,(const char*)filename,-1,filenameW,FILENAME_MAX + 0x200);

  00045	48 8d 44 24 40	 lea	 rax, QWORD PTR filenameW$1[rsp]
  0004a	41 83 c9 ff	 or	 r9d, -1
  0004e	4d 8b c3	 mov	 r8, r11
  00051	33 d2		 xor	 edx, edx
  00053	33 c9		 xor	 ecx, ecx
  00055	c7 44 24 28 04
	03 00 00	 mov	 DWORD PTR [rsp+40], 772	; 00000304H
  0005d	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_MultiByteToWideChar

; 112  :         hFile = CreateFile2(filenameW, dwDesiredAccess, dwShareMode, dwCreationDisposition, NULL);

  00068	44 8b 8c 24 78
	06 00 00	 mov	 r9d, DWORD PTR dwCreationDisposition$[rsp]
  00070	44 8b 44 24 30	 mov	 r8d, DWORD PTR dwShareMode$[rsp]
  00075	8b 94 24 68 06
	00 00		 mov	 edx, DWORD PTR dwDesiredAccess$[rsp]
  0007c	48 8d 4c 24 40	 lea	 rcx, QWORD PTR filenameW$1[rsp]
  00081	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  00086	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateFile2
  0008c	48 8b f8	 mov	 rdi, rax
$LN1@win32_open:

; 113  :     }
; 114  : #endif
; 115  : #else
; 116  :     if ((filename!=NULL) && (dwDesiredAccess != 0))
; 117  :         hFile = CreateFile((LPCTSTR)filename, dwDesiredAccess, dwShareMode, NULL, dwCreationDisposition, dwFlagsAndAttributes, NULL);
; 118  : #endif
; 119  : 
; 120  :     return win32_build_iowin(hFile);

  0008f	48 8b cf	 mov	 rcx, rdi
  00092	e8 00 00 00 00	 call	 win32_build_iowin

; 121  : }

  00097	48 81 c4 50 06
	00 00		 add	 rsp, 1616		; 00000650H
  0009e	5f		 pop	 rdi
  0009f	c3		 ret	 0
win32_open64_file_func ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\projectsgit\gamecode4\source\gcc4\3rdparty\zlib-1.2.8\contrib\minizip\iowin32.c
;	COMDAT win32_open64_file_funcA
_TEXT	SEGMENT
dwShareMode$ = 48
dwFlagsAndAttributes$ = 52
filenameW$1 = 64
opaque$ = 1632
dwDesiredAccess$ = 1640
filename$ = 1640
mode$ = 1648
dwCreationDisposition$ = 1656
win32_open64_file_funcA PROC				; COMDAT

; 125  : {

$LN5:
  00000	40 57		 push	 rdi
  00002	48 81 ec 50 06
	00 00		 sub	 rsp, 1616		; 00000650H
  00009	41 8b c0	 mov	 eax, r8d

; 126  :     const char* mode_fopen = NULL;
; 127  :     DWORD dwDesiredAccess,dwCreationDisposition,dwShareMode,dwFlagsAndAttributes ;
; 128  :     HANDLE hFile = NULL;
; 129  : 
; 130  :     win32_translate_open_mode(mode,&dwDesiredAccess,&dwCreationDisposition,&dwShareMode,&dwFlagsAndAttributes);

  0000c	48 8d 4c 24 34	 lea	 rcx, QWORD PTR dwFlagsAndAttributes$[rsp]
  00011	4c 8b da	 mov	 r11, rdx
  00014	4c 8d 4c 24 30	 lea	 r9, QWORD PTR dwShareMode$[rsp]
  00019	4c 8d 84 24 78
	06 00 00	 lea	 r8, QWORD PTR dwCreationDisposition$[rsp]
  00021	48 8d 94 24 68
	06 00 00	 lea	 rdx, QWORD PTR dwDesiredAccess$[rsp]
  00029	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0002e	8b c8		 mov	 ecx, eax
  00030	33 ff		 xor	 edi, edi
  00032	e8 00 00 00 00	 call	 win32_translate_open_mode

; 131  : 
; 132  : #ifdef IOWIN32_USING_WINRT_API
; 133  :     if ((filename!=NULL) && (dwDesiredAccess != 0))

  00037	4d 85 db	 test	 r11, r11
  0003a	74 53		 je	 SHORT $LN1@win32_open
  0003c	39 bc 24 68 06
	00 00		 cmp	 DWORD PTR dwDesiredAccess$[rsp], edi
  00043	74 4a		 je	 SHORT $LN1@win32_open

; 134  :     {
; 135  :         WCHAR filenameW[FILENAME_MAX + 0x200 + 1];
; 136  :         MultiByteToWideChar(CP_ACP,0,(const char*)filename,-1,filenameW,FILENAME_MAX + 0x200);

  00045	48 8d 44 24 40	 lea	 rax, QWORD PTR filenameW$1[rsp]
  0004a	41 83 c9 ff	 or	 r9d, -1
  0004e	4d 8b c3	 mov	 r8, r11
  00051	33 d2		 xor	 edx, edx
  00053	33 c9		 xor	 ecx, ecx
  00055	c7 44 24 28 04
	03 00 00	 mov	 DWORD PTR [rsp+40], 772	; 00000304H
  0005d	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_MultiByteToWideChar

; 137  :         hFile = CreateFile2(filenameW, dwDesiredAccess, dwShareMode, dwCreationDisposition, NULL);

  00068	44 8b 8c 24 78
	06 00 00	 mov	 r9d, DWORD PTR dwCreationDisposition$[rsp]
  00070	44 8b 44 24 30	 mov	 r8d, DWORD PTR dwShareMode$[rsp]
  00075	8b 94 24 68 06
	00 00		 mov	 edx, DWORD PTR dwDesiredAccess$[rsp]
  0007c	48 8d 4c 24 40	 lea	 rcx, QWORD PTR filenameW$1[rsp]
  00081	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  00086	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateFile2
  0008c	48 8b f8	 mov	 rdi, rax
$LN1@win32_open:

; 138  :     }
; 139  : #else
; 140  :     if ((filename!=NULL) && (dwDesiredAccess != 0))
; 141  :         hFile = CreateFileA((LPCSTR)filename, dwDesiredAccess, dwShareMode, NULL, dwCreationDisposition, dwFlagsAndAttributes, NULL);
; 142  : #endif
; 143  : 
; 144  :     return win32_build_iowin(hFile);

  0008f	48 8b cf	 mov	 rcx, rdi
  00092	e8 00 00 00 00	 call	 win32_build_iowin

; 145  : }

  00097	48 81 c4 50 06
	00 00		 add	 rsp, 1616		; 00000650H
  0009e	5f		 pop	 rdi
  0009f	c3		 ret	 0
win32_open64_file_funcA ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\projectsgit\gamecode4\source\gcc4\3rdparty\zlib-1.2.8\contrib\minizip\iowin32.c
;	COMDAT win32_open64_file_funcW
_TEXT	SEGMENT
dwShareMode$ = 48
dwFlagsAndAttributes$ = 52
opaque$ = 80
dwDesiredAccess$ = 88
filename$ = 88
mode$ = 96
dwCreationDisposition$ = 104
win32_open64_file_funcW PROC				; COMDAT

; 149  : {

$LN5:
  00000	40 53		 push	 rbx
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	41 8b c0	 mov	 eax, r8d

; 150  :     const char* mode_fopen = NULL;
; 151  :     DWORD dwDesiredAccess,dwCreationDisposition,dwShareMode,dwFlagsAndAttributes ;
; 152  :     HANDLE hFile = NULL;
; 153  : 
; 154  :     win32_translate_open_mode(mode,&dwDesiredAccess,&dwCreationDisposition,&dwShareMode,&dwFlagsAndAttributes);

  00009	48 8d 4c 24 34	 lea	 rcx, QWORD PTR dwFlagsAndAttributes$[rsp]
  0000e	48 8b da	 mov	 rbx, rdx
  00011	4c 8d 4c 24 30	 lea	 r9, QWORD PTR dwShareMode$[rsp]
  00016	4c 8d 44 24 68	 lea	 r8, QWORD PTR dwCreationDisposition$[rsp]
  0001b	48 8d 54 24 58	 lea	 rdx, QWORD PTR dwDesiredAccess$[rsp]
  00020	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00025	8b c8		 mov	 ecx, eax
  00027	45 33 db	 xor	 r11d, r11d
  0002a	e8 00 00 00 00	 call	 win32_translate_open_mode

; 155  : 
; 156  : #ifdef IOWIN32_USING_WINRT_API
; 157  :     if ((filename!=NULL) && (dwDesiredAccess != 0))

  0002f	48 85 db	 test	 rbx, rbx
  00032	74 23		 je	 SHORT $LN1@win32_open
  00034	8b 54 24 58	 mov	 edx, DWORD PTR dwDesiredAccess$[rsp]
  00038	85 d2		 test	 edx, edx
  0003a	74 1b		 je	 SHORT $LN1@win32_open

; 158  :         hFile = CreateFile2((LPCWSTR)filename, dwDesiredAccess, dwShareMode, dwCreationDisposition,NULL);

  0003c	44 8b 4c 24 68	 mov	 r9d, DWORD PTR dwCreationDisposition$[rsp]
  00041	44 8b 44 24 30	 mov	 r8d, DWORD PTR dwShareMode$[rsp]
  00046	48 8b cb	 mov	 rcx, rbx
  00049	4c 89 5c 24 20	 mov	 QWORD PTR [rsp+32], r11
  0004e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateFile2
  00054	4c 8b d8	 mov	 r11, rax
$LN1@win32_open:

; 159  : #else
; 160  :     if ((filename!=NULL) && (dwDesiredAccess != 0))
; 161  :         hFile = CreateFileW((LPCWSTR)filename, dwDesiredAccess, dwShareMode, NULL, dwCreationDisposition, dwFlagsAndAttributes, NULL);
; 162  : #endif
; 163  : 
; 164  :     return win32_build_iowin(hFile);

  00057	49 8b cb	 mov	 rcx, r11

; 165  : }

  0005a	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0005e	5b		 pop	 rbx

; 159  : #else
; 160  :     if ((filename!=NULL) && (dwDesiredAccess != 0))
; 161  :         hFile = CreateFileW((LPCWSTR)filename, dwDesiredAccess, dwShareMode, NULL, dwCreationDisposition, dwFlagsAndAttributes, NULL);
; 162  : #endif
; 163  : 
; 164  :     return win32_build_iowin(hFile);

  0005f	e9 00 00 00 00	 jmp	 win32_build_iowin
win32_open64_file_funcW ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\projectsgit\gamecode4\source\gcc4\3rdparty\zlib-1.2.8\contrib\minizip\iowin32.c
;	COMDAT win32_open_file_func
_TEXT	SEGMENT
dwShareMode$ = 48
dwFlagsAndAttributes$ = 52
filenameW$1 = 64
opaque$ = 1632
dwDesiredAccess$ = 1640
filename$ = 1640
mode$ = 1648
dwCreationDisposition$ = 1656
win32_open_file_func PROC				; COMDAT

; 169  : {

$LN5:
  00000	40 57		 push	 rdi
  00002	48 81 ec 50 06
	00 00		 sub	 rsp, 1616		; 00000650H
  00009	41 8b c0	 mov	 eax, r8d

; 170  :     const char* mode_fopen = NULL;
; 171  :     DWORD dwDesiredAccess,dwCreationDisposition,dwShareMode,dwFlagsAndAttributes ;
; 172  :     HANDLE hFile = NULL;
; 173  : 
; 174  :     win32_translate_open_mode(mode,&dwDesiredAccess,&dwCreationDisposition,&dwShareMode,&dwFlagsAndAttributes);

  0000c	48 8d 4c 24 34	 lea	 rcx, QWORD PTR dwFlagsAndAttributes$[rsp]
  00011	4c 8b da	 mov	 r11, rdx
  00014	4c 8d 4c 24 30	 lea	 r9, QWORD PTR dwShareMode$[rsp]
  00019	4c 8d 84 24 78
	06 00 00	 lea	 r8, QWORD PTR dwCreationDisposition$[rsp]
  00021	48 8d 94 24 68
	06 00 00	 lea	 rdx, QWORD PTR dwDesiredAccess$[rsp]
  00029	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0002e	8b c8		 mov	 ecx, eax
  00030	33 ff		 xor	 edi, edi
  00032	e8 00 00 00 00	 call	 win32_translate_open_mode

; 175  : 
; 176  : #ifdef IOWIN32_USING_WINRT_API
; 177  : #ifdef UNICODE
; 178  :     if ((filename!=NULL) && (dwDesiredAccess != 0))
; 179  :         hFile = CreateFile2((LPCTSTR)filename, dwDesiredAccess, dwShareMode, dwCreationDisposition, NULL);
; 180  : #else
; 181  :     if ((filename!=NULL) && (dwDesiredAccess != 0))

  00037	4d 85 db	 test	 r11, r11
  0003a	74 53		 je	 SHORT $LN1@win32_open
  0003c	39 bc 24 68 06
	00 00		 cmp	 DWORD PTR dwDesiredAccess$[rsp], edi
  00043	74 4a		 je	 SHORT $LN1@win32_open

; 182  :     {
; 183  :         WCHAR filenameW[FILENAME_MAX + 0x200 + 1];
; 184  :         MultiByteToWideChar(CP_ACP,0,(const char*)filename,-1,filenameW,FILENAME_MAX + 0x200);

  00045	48 8d 44 24 40	 lea	 rax, QWORD PTR filenameW$1[rsp]
  0004a	41 83 c9 ff	 or	 r9d, -1
  0004e	4d 8b c3	 mov	 r8, r11
  00051	33 d2		 xor	 edx, edx
  00053	33 c9		 xor	 ecx, ecx
  00055	c7 44 24 28 04
	03 00 00	 mov	 DWORD PTR [rsp+40], 772	; 00000304H
  0005d	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_MultiByteToWideChar

; 185  :         hFile = CreateFile2(filenameW, dwDesiredAccess, dwShareMode, dwCreationDisposition, NULL);

  00068	44 8b 8c 24 78
	06 00 00	 mov	 r9d, DWORD PTR dwCreationDisposition$[rsp]
  00070	44 8b 44 24 30	 mov	 r8d, DWORD PTR dwShareMode$[rsp]
  00075	8b 94 24 68 06
	00 00		 mov	 edx, DWORD PTR dwDesiredAccess$[rsp]
  0007c	48 8d 4c 24 40	 lea	 rcx, QWORD PTR filenameW$1[rsp]
  00081	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  00086	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateFile2
  0008c	48 8b f8	 mov	 rdi, rax
$LN1@win32_open:

; 186  :     }
; 187  : #endif
; 188  : #else
; 189  :     if ((filename!=NULL) && (dwDesiredAccess != 0))
; 190  :         hFile = CreateFile((LPCTSTR)filename, dwDesiredAccess, dwShareMode, NULL, dwCreationDisposition, dwFlagsAndAttributes, NULL);
; 191  : #endif
; 192  : 
; 193  :     return win32_build_iowin(hFile);

  0008f	48 8b cf	 mov	 rcx, rdi
  00092	e8 00 00 00 00	 call	 win32_build_iowin

; 194  : }

  00097	48 81 c4 50 06
	00 00		 add	 rsp, 1616		; 00000650H
  0009e	5f		 pop	 rdi
  0009f	c3		 ret	 0
win32_open_file_func ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\projectsgit\gamecode4\source\gcc4\3rdparty\zlib-1.2.8\contrib\minizip\iowin32.c
;	COMDAT win32_read_file_func
_TEXT	SEGMENT
opaque$ = 64
ret$ = 72
stream$ = 72
buf$ = 80
size$ = 88
win32_read_file_func PROC				; COMDAT

; 198  : {

$LN11:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 199  :     uLong ret=0;

  0000a	33 ff		 xor	 edi, edi
  0000c	41 8b c1	 mov	 eax, r9d
  0000f	4d 8b d0	 mov	 r10, r8
  00012	48 8b da	 mov	 rbx, rdx
  00015	89 7c 24 48	 mov	 DWORD PTR ret$[rsp], edi

; 200  :     HANDLE hFile = NULL;
; 201  :     if (stream!=NULL)

  00019	48 85 d2	 test	 rdx, rdx
  0001c	74 40		 je	 SHORT $LN9@win32_read

; 202  :         hFile = ((WIN32FILE_IOWIN*)stream) -> hf;

  0001e	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]

; 203  : 
; 204  :     if (hFile != NULL)

  00021	48 85 c9	 test	 rcx, rcx
  00024	74 38		 je	 SHORT $LN9@win32_read

; 205  :     {
; 206  :         if (!ReadFile(hFile, buf, size, &ret, NULL))

  00026	4c 8d 4c 24 48	 lea	 r9, QWORD PTR ret$[rsp]
  0002b	44 8b c0	 mov	 r8d, eax
  0002e	49 8b d2	 mov	 rdx, r10
  00031	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  00036	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ReadFile
  0003c	85 c0		 test	 eax, eax
  0003e	75 0f		 jne	 SHORT $LN7@win32_read

; 207  :         {
; 208  :             DWORD dwErr = GetLastError();

  00040	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetLastError

; 209  :             if (dwErr == ERROR_HANDLE_EOF)

  00046	83 f8 26	 cmp	 eax, 38			; 00000026H
  00049	0f 44 c7	 cmove	 eax, edi

; 210  :                 dwErr = 0;
; 211  :             ((WIN32FILE_IOWIN*)stream) -> error=(int)dwErr;

  0004c	89 43 08	 mov	 DWORD PTR [rbx+8], eax
$LN7@win32_read:

; 212  :         }
; 213  :     }
; 214  : 
; 215  :     return ret;

  0004f	8b 44 24 48	 mov	 eax, DWORD PTR ret$[rsp]

; 216  : }

  00053	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00058	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
$LN9@win32_read:

; 212  :         }
; 213  :     }
; 214  : 
; 215  :     return ret;

  0005e	8b c7		 mov	 eax, edi

; 216  : }

  00060	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00065	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00069	5f		 pop	 rdi
  0006a	c3		 ret	 0
win32_read_file_func ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\projectsgit\gamecode4\source\gcc4\3rdparty\zlib-1.2.8\contrib\minizip\iowin32.c
;	COMDAT win32_write_file_func
_TEXT	SEGMENT
opaque$ = 64
ret$ = 72
stream$ = 72
buf$ = 80
size$ = 88
win32_write_file_func PROC				; COMDAT

; 220  : {

$LN11:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 221  :     uLong ret=0;

  0000a	33 ff		 xor	 edi, edi
  0000c	41 8b c1	 mov	 eax, r9d
  0000f	4d 8b d0	 mov	 r10, r8
  00012	48 8b da	 mov	 rbx, rdx
  00015	89 7c 24 48	 mov	 DWORD PTR ret$[rsp], edi

; 222  :     HANDLE hFile = NULL;
; 223  :     if (stream!=NULL)

  00019	48 85 d2	 test	 rdx, rdx
  0001c	74 40		 je	 SHORT $LN9@win32_writ

; 224  :         hFile = ((WIN32FILE_IOWIN*)stream) -> hf;

  0001e	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]

; 225  : 
; 226  :     if (hFile != NULL)

  00021	48 85 c9	 test	 rcx, rcx
  00024	74 38		 je	 SHORT $LN9@win32_writ

; 227  :     {
; 228  :         if (!WriteFile(hFile, buf, size, &ret, NULL))

  00026	4c 8d 4c 24 48	 lea	 r9, QWORD PTR ret$[rsp]
  0002b	44 8b c0	 mov	 r8d, eax
  0002e	49 8b d2	 mov	 rdx, r10
  00031	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  00036	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_WriteFile
  0003c	85 c0		 test	 eax, eax
  0003e	75 0f		 jne	 SHORT $LN7@win32_writ

; 229  :         {
; 230  :             DWORD dwErr = GetLastError();

  00040	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetLastError

; 231  :             if (dwErr == ERROR_HANDLE_EOF)

  00046	83 f8 26	 cmp	 eax, 38			; 00000026H
  00049	0f 44 c7	 cmove	 eax, edi

; 232  :                 dwErr = 0;
; 233  :             ((WIN32FILE_IOWIN*)stream) -> error=(int)dwErr;

  0004c	89 43 08	 mov	 DWORD PTR [rbx+8], eax
$LN7@win32_writ:

; 234  :         }
; 235  :     }
; 236  : 
; 237  :     return ret;

  0004f	8b 44 24 48	 mov	 eax, DWORD PTR ret$[rsp]

; 238  : }

  00053	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00058	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
$LN9@win32_writ:

; 234  :         }
; 235  :     }
; 236  : 
; 237  :     return ret;

  0005e	8b c7		 mov	 eax, edi

; 238  : }

  00060	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00065	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00069	5f		 pop	 rdi
  0006a	c3		 ret	 0
win32_write_file_func ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\projectsgit\gamecode4\source\gcc4\3rdparty\zlib-1.2.8\contrib\minizip\iowin32.c
;	COMDAT MySetFilePointerEx
_TEXT	SEGMENT
hFile$ = 48
pos$ = 56
newPos$ = 64
dwMoveMethod$ = 72
MySetFilePointerEx PROC					; COMDAT

; 241  : {

  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 242  : #ifdef IOWIN32_USING_WINRT_API
; 243  :     return SetFilePointerEx(hFile, pos, newPos, dwMoveMethod);

  00004	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetFilePointerEx

; 244  : #else
; 245  :     LONG lHigh = pos.HighPart;
; 246  :     DWORD dwNewPos = SetFilePointer(hFile, pos.LowPart, &lHigh, FILE_CURRENT);
; 247  :     BOOL fOk = TRUE;
; 248  :     if (dwNewPos == 0xFFFFFFFF)
; 249  :         if (GetLastError() != NO_ERROR)
; 250  :             fOk = FALSE;
; 251  :     if ((newPos != NULL) && (fOk))
; 252  :     {
; 253  :         newPos->LowPart = dwNewPos;
; 254  :         newPos->HighPart = lHigh;
; 255  :     }
; 256  :     return fOk;
; 257  : #endif
; 258  : }

  0000a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000e	c3		 ret	 0
MySetFilePointerEx ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\projectsgit\gamecode4\source\gcc4\3rdparty\zlib-1.2.8\contrib\minizip\iowin32.c
;	COMDAT win32_tell_file_func
_TEXT	SEGMENT
opaque$ = 48
pos$1 = 56
stream$ = 56
win32_tell_file_func PROC				; COMDAT

; 261  : {

$LN10:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b da	 mov	 rbx, rdx

; 262  :     long ret=-1;
; 263  :     HANDLE hFile = NULL;
; 264  :     if (stream!=NULL)

  00009	48 85 d2	 test	 rdx, rdx
  0000c	74 30		 je	 SHORT $LN8@win32_tell

; 265  :         hFile = ((WIN32FILE_IOWIN*)stream) -> hf;

  0000e	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]

; 266  :     if (hFile != NULL)

  00011	48 85 c9	 test	 rcx, rcx
  00014	74 28		 je	 SHORT $LN8@win32_tell

; 267  :     {
; 268  :         LARGE_INTEGER pos;
; 269  :         pos.QuadPart = 0;
; 270  : 
; 271  :         if (!MySetFilePointerEx(hFile, pos, &pos, FILE_CURRENT))

  00016	4c 8d 44 24 38	 lea	 r8, QWORD PTR pos$1[rsp]
  0001b	41 b9 01 00 00
	00		 mov	 r9d, 1
  00021	33 d2		 xor	 edx, edx
  00023	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR pos$1[rsp], 0
  0002c	e8 00 00 00 00	 call	 MySetFilePointerEx
  00031	85 c0		 test	 eax, eax
  00033	75 12		 jne	 SHORT $LN2@win32_tell

; 272  :         {
; 273  :             DWORD dwErr = GetLastError();

  00035	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetLastError

; 274  :             ((WIN32FILE_IOWIN*)stream) -> error=(int)dwErr;

  0003b	89 43 08	 mov	 DWORD PTR [rbx+8], eax
$LN8@win32_tell:

; 275  :             ret = -1;
; 276  :         }
; 277  :         else
; 278  :             ret=(long)pos.LowPart;
; 279  :     }
; 280  :     return ret;

  0003e	83 c8 ff	 or	 eax, -1

; 281  : }

  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5b		 pop	 rbx
  00046	c3		 ret	 0
$LN2@win32_tell:

; 275  :             ret = -1;
; 276  :         }
; 277  :         else
; 278  :             ret=(long)pos.LowPart;
; 279  :     }
; 280  :     return ret;

  00047	8b 44 24 38	 mov	 eax, DWORD PTR pos$1[rsp]

; 281  : }

  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5b		 pop	 rbx
  00050	c3		 ret	 0
win32_tell_file_func ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\projectsgit\gamecode4\source\gcc4\3rdparty\zlib-1.2.8\contrib\minizip\iowin32.c
;	COMDAT win32_tell64_file_func
_TEXT	SEGMENT
opaque$ = 48
pos$1 = 56
stream$ = 56
win32_tell64_file_func PROC				; COMDAT

; 284  : {

$LN10:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b da	 mov	 rbx, rdx

; 285  :     ZPOS64_T ret= (ZPOS64_T)-1;
; 286  :     HANDLE hFile = NULL;
; 287  :     if (stream!=NULL)

  00009	48 85 d2	 test	 rdx, rdx
  0000c	74 30		 je	 SHORT $LN8@win32_tell

; 288  :         hFile = ((WIN32FILE_IOWIN*)stream)->hf;

  0000e	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]

; 289  : 
; 290  :     if (hFile)

  00011	48 85 c9	 test	 rcx, rcx
  00014	74 28		 je	 SHORT $LN8@win32_tell

; 291  :     {
; 292  :         LARGE_INTEGER pos;
; 293  :         pos.QuadPart = 0;
; 294  : 
; 295  :         if (!MySetFilePointerEx(hFile, pos, &pos, FILE_CURRENT))

  00016	4c 8d 44 24 38	 lea	 r8, QWORD PTR pos$1[rsp]
  0001b	41 b9 01 00 00
	00		 mov	 r9d, 1
  00021	33 d2		 xor	 edx, edx
  00023	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR pos$1[rsp], 0
  0002c	e8 00 00 00 00	 call	 MySetFilePointerEx
  00031	85 c0		 test	 eax, eax
  00033	75 13		 jne	 SHORT $LN2@win32_tell

; 296  :         {
; 297  :             DWORD dwErr = GetLastError();

  00035	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetLastError

; 298  :             ((WIN32FILE_IOWIN*)stream) -> error=(int)dwErr;

  0003b	89 43 08	 mov	 DWORD PTR [rbx+8], eax
$LN8@win32_tell:

; 299  :             ret = (ZPOS64_T)-1;
; 300  :         }
; 301  :         else
; 302  :             ret=pos.QuadPart;
; 303  :     }
; 304  :     return ret;

  0003e	48 83 c8 ff	 or	 rax, -1

; 305  : }

  00042	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00046	5b		 pop	 rbx
  00047	c3		 ret	 0
$LN2@win32_tell:

; 299  :             ret = (ZPOS64_T)-1;
; 300  :         }
; 301  :         else
; 302  :             ret=pos.QuadPart;
; 303  :     }
; 304  :     return ret;

  00048	48 8b 44 24 38	 mov	 rax, QWORD PTR pos$1[rsp]

; 305  : }

  0004d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00051	5b		 pop	 rbx
  00052	c3		 ret	 0
win32_tell64_file_func ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\projectsgit\gamecode4\source\gcc4\3rdparty\zlib-1.2.8\contrib\minizip\iowin32.c
;	COMDAT win32_seek_file_func
_TEXT	SEGMENT
opaque$ = 48
stream$ = 56
offset$ = 64
origin$ = 72
win32_seek_file_func PROC				; COMDAT

; 309  : {

$LN14:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 310  :     DWORD dwMoveMethod=0xFFFFFFFF;
; 311  :     HANDLE hFile = NULL;

  0000a	33 c9		 xor	 ecx, ecx

; 312  : 
; 313  :     long ret=-1;

  0000c	83 cb ff	 or	 ebx, -1
  0000f	48 8b fa	 mov	 rdi, rdx

; 314  :     if (stream!=NULL)

  00012	48 85 d2	 test	 rdx, rdx
  00015	74 03		 je	 SHORT $LN10@win32_seek

; 315  :         hFile = ((WIN32FILE_IOWIN*)stream) -> hf;

  00017	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
$LN10@win32_seek:

; 316  :     switch (origin)

  0001a	45 85 c9	 test	 r9d, r9d
  0001d	74 1a		 je	 SHORT $LN5@win32_seek
  0001f	41 ff c9	 dec	 r9d
  00022	74 0d		 je	 SHORT $LN7@win32_seek
  00024	41 ff c9	 dec	 r9d
  00027	75 3f		 jne	 SHORT $LN1@win32_seek

; 321  :     case ZLIB_FILEFUNC_SEEK_END :
; 322  :         dwMoveMethod = FILE_END;

  00029	41 b9 02 00 00
	00		 mov	 r9d, 2

; 323  :         break;

  0002f	eb 0b		 jmp	 SHORT $LN8@win32_seek
$LN7@win32_seek:

; 317  :     {
; 318  :     case ZLIB_FILEFUNC_SEEK_CUR :
; 319  :         dwMoveMethod = FILE_CURRENT;

  00031	41 b9 01 00 00
	00		 mov	 r9d, 1

; 320  :         break;

  00037	eb 03		 jmp	 SHORT $LN8@win32_seek
$LN5@win32_seek:

; 324  :     case ZLIB_FILEFUNC_SEEK_SET :
; 325  :         dwMoveMethod = FILE_BEGIN;

  00039	45 33 c9	 xor	 r9d, r9d
$LN8@win32_seek:

; 326  :         break;
; 327  :     default: return -1;
; 328  :     }
; 329  : 
; 330  :     if (hFile != NULL)

  0003c	48 85 c9	 test	 rcx, rcx
  0003f	74 27		 je	 SHORT $LN1@win32_seek

; 331  :     {
; 332  :         LARGE_INTEGER pos;
; 333  :         pos.QuadPart = offset;

  00041	41 8b d0	 mov	 edx, r8d

; 334  :         if (!MySetFilePointerEx(hFile, pos, NULL, dwMoveMethod))

  00044	45 33 c0	 xor	 r8d, r8d
  00047	e8 00 00 00 00	 call	 MySetFilePointerEx
  0004c	85 c0		 test	 eax, eax
  0004e	75 16		 jne	 SHORT $LN2@win32_seek

; 335  :         {
; 336  :             DWORD dwErr = GetLastError();

  00050	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetLastError

; 337  :             ((WIN32FILE_IOWIN*)stream) -> error=(int)dwErr;

  00056	89 47 08	 mov	 DWORD PTR [rdi+8], eax

; 342  :     }
; 343  :     return ret;

  00059	8b c3		 mov	 eax, ebx

; 344  : }

  0005b	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00060	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
$LN2@win32_seek:

; 338  :             ret = -1;
; 339  :         }
; 340  :         else
; 341  :             ret=0;

  00066	33 db		 xor	 ebx, ebx
$LN1@win32_seek:

; 342  :     }
; 343  :     return ret;

  00068	8b c3		 mov	 eax, ebx

; 344  : }

  0006a	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0006f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
win32_seek_file_func ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\projectsgit\gamecode4\source\gcc4\3rdparty\zlib-1.2.8\contrib\minizip\iowin32.c
;	COMDAT win32_seek64_file_func
_TEXT	SEGMENT
opaque$ = 48
stream$ = 56
offset$ = 64
origin$ = 72
win32_seek64_file_func PROC				; COMDAT

; 347  : {

$LN14:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 348  :     DWORD dwMoveMethod=0xFFFFFFFF;
; 349  :     HANDLE hFile = NULL;

  0000a	33 c9		 xor	 ecx, ecx

; 350  :     long ret=-1;

  0000c	83 cb ff	 or	 ebx, -1
  0000f	4d 8b d0	 mov	 r10, r8
  00012	48 8b fa	 mov	 rdi, rdx

; 351  : 
; 352  :     if (stream!=NULL)

  00015	48 85 d2	 test	 rdx, rdx
  00018	74 03		 je	 SHORT $LN10@win32_seek

; 353  :         hFile = ((WIN32FILE_IOWIN*)stream)->hf;

  0001a	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
$LN10@win32_seek:

; 354  : 
; 355  :     switch (origin)

  0001d	45 85 c9	 test	 r9d, r9d
  00020	74 0a		 je	 SHORT $LN6@win32_seek
  00022	41 ff c9	 dec	 r9d
  00025	74 05		 je	 SHORT $LN6@win32_seek
  00027	41 ff c9	 dec	 r9d
  0002a	75 32		 jne	 SHORT $LN1@win32_seek
$LN6@win32_seek:

; 356  :     {
; 357  :         case ZLIB_FILEFUNC_SEEK_CUR :
; 358  :             dwMoveMethod = FILE_CURRENT;
; 359  :             break;
; 360  :         case ZLIB_FILEFUNC_SEEK_END :
; 361  :             dwMoveMethod = FILE_END;
; 362  :             break;
; 363  :         case ZLIB_FILEFUNC_SEEK_SET :
; 364  :             dwMoveMethod = FILE_BEGIN;
; 365  :             break;
; 366  :         default: return -1;
; 367  :     }
; 368  : 
; 369  :     if (hFile)

  0002c	48 85 c9	 test	 rcx, rcx
  0002f	74 2d		 je	 SHORT $LN1@win32_seek

; 370  :     {
; 371  :         LARGE_INTEGER pos;
; 372  :         pos.QuadPart = offset;
; 373  :         if (!MySetFilePointerEx(hFile, pos, NULL, FILE_CURRENT))

  00031	41 b9 01 00 00
	00		 mov	 r9d, 1
  00037	45 33 c0	 xor	 r8d, r8d
  0003a	49 8b d2	 mov	 rdx, r10
  0003d	e8 00 00 00 00	 call	 MySetFilePointerEx
  00042	85 c0		 test	 eax, eax
  00044	75 16		 jne	 SHORT $LN2@win32_seek

; 374  :         {
; 375  :             DWORD dwErr = GetLastError();

  00046	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetLastError

; 376  :             ((WIN32FILE_IOWIN*)stream) -> error=(int)dwErr;

  0004c	89 47 08	 mov	 DWORD PTR [rdi+8], eax

; 381  :     }
; 382  :     return ret;

  0004f	8b c3		 mov	 eax, ebx

; 383  : }

  00051	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00056	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
$LN2@win32_seek:

; 377  :             ret = -1;
; 378  :         }
; 379  :         else
; 380  :             ret=0;

  0005c	33 db		 xor	 ebx, ebx
$LN1@win32_seek:

; 381  :     }
; 382  :     return ret;

  0005e	8b c3		 mov	 eax, ebx

; 383  : }

  00060	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00065	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00069	5f		 pop	 rdi
  0006a	c3		 ret	 0
win32_seek64_file_func ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\projectsgit\gamecode4\source\gcc4\3rdparty\zlib-1.2.8\contrib\minizip\iowin32.c
;	COMDAT win32_close_file_func
_TEXT	SEGMENT
opaque$ = 48
stream$ = 56
win32_close_file_func PROC				; COMDAT

; 386  : {

$LN7:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 387  :     int ret=-1;

  0000a	83 cb ff	 or	 ebx, -1
  0000d	48 8b fa	 mov	 rdi, rdx

; 388  : 
; 389  :     if (stream!=NULL)

  00010	48 85 d2	 test	 rdx, rdx
  00013	74 19		 je	 SHORT $LN5@win32_clos

; 390  :     {
; 391  :         HANDLE hFile;
; 392  :         hFile = ((WIN32FILE_IOWIN*)stream) -> hf;

  00015	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]

; 393  :         if (hFile != NULL)

  00018	48 85 c9	 test	 rcx, rcx
  0001b	74 08		 je	 SHORT $LN1@win32_clos

; 394  :         {
; 395  :             CloseHandle(hFile);

  0001d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CloseHandle

; 396  :             ret=0;

  00023	33 db		 xor	 ebx, ebx
$LN1@win32_clos:

; 397  :         }
; 398  :         free(stream);

  00025	48 8b cf	 mov	 rcx, rdi
  00028	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_free
$LN5@win32_clos:

; 399  :     }
; 400  :     return ret;

  0002e	8b c3		 mov	 eax, ebx

; 401  : }

  00030	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
win32_close_file_func ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\projectsgit\gamecode4\source\gcc4\3rdparty\zlib-1.2.8\contrib\minizip\iowin32.c
;	COMDAT win32_error_file_func
_TEXT	SEGMENT
opaque$ = 8
stream$ = 16
win32_error_file_func PROC				; COMDAT

; 405  :     int ret=-1;
; 406  :     if (stream!=NULL)

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 04		 je	 SHORT $LN4@win32_erro

; 407  :     {
; 408  :         ret = ((WIN32FILE_IOWIN*)stream) -> error;
; 409  :     }
; 410  :     return ret;

  00005	8b 42 08	 mov	 eax, DWORD PTR [rdx+8]

; 411  : }

  00008	c3		 ret	 0
$LN4@win32_erro:

; 407  :     {
; 408  :         ret = ((WIN32FILE_IOWIN*)stream) -> error;
; 409  :     }
; 410  :     return ret;

  00009	83 c8 ff	 or	 eax, -1

; 411  : }

  0000c	c3		 ret	 0
win32_error_file_func ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\projectsgit\gamecode4\source\gcc4\3rdparty\zlib-1.2.8\contrib\minizip\iowin32.c
;	COMDAT fill_win32_filefunc
_TEXT	SEGMENT
pzlib_filefunc_def$ = 8
fill_win32_filefunc PROC				; COMDAT

; 415  :     pzlib_filefunc_def->zopen_file = win32_open_file_func;

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_open_file_func

; 416  :     pzlib_filefunc_def->zread_file = win32_read_file_func;
; 417  :     pzlib_filefunc_def->zwrite_file = win32_write_file_func;
; 418  :     pzlib_filefunc_def->ztell_file = win32_tell_file_func;
; 419  :     pzlib_filefunc_def->zseek_file = win32_seek_file_func;
; 420  :     pzlib_filefunc_def->zclose_file = win32_close_file_func;
; 421  :     pzlib_filefunc_def->zerror_file = win32_error_file_func;
; 422  :     pzlib_filefunc_def->opaque = NULL;

  00007	48 c7 41 38 00
	00 00 00	 mov	 QWORD PTR [rcx+56], 0
  0000f	48 89 01	 mov	 QWORD PTR [rcx], rax
  00012	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_read_file_func
  00019	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_write_file_func
  00024	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
  00028	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_tell_file_func
  0002f	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
  00033	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_seek_file_func
  0003a	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax
  0003e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_close_file_func
  00045	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax
  00049	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_error_file_func
  00050	48 89 41 30	 mov	 QWORD PTR [rcx+48], rax

; 423  : }

  00054	c3		 ret	 0
fill_win32_filefunc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\projectsgit\gamecode4\source\gcc4\3rdparty\zlib-1.2.8\contrib\minizip\iowin32.c
;	COMDAT fill_win32_filefunc64
_TEXT	SEGMENT
pzlib_filefunc_def$ = 8
fill_win32_filefunc64 PROC				; COMDAT

; 427  :     pzlib_filefunc_def->zopen64_file = win32_open64_file_func;

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_open64_file_func

; 428  :     pzlib_filefunc_def->zread_file = win32_read_file_func;
; 429  :     pzlib_filefunc_def->zwrite_file = win32_write_file_func;
; 430  :     pzlib_filefunc_def->ztell64_file = win32_tell64_file_func;
; 431  :     pzlib_filefunc_def->zseek64_file = win32_seek64_file_func;
; 432  :     pzlib_filefunc_def->zclose_file = win32_close_file_func;
; 433  :     pzlib_filefunc_def->zerror_file = win32_error_file_func;
; 434  :     pzlib_filefunc_def->opaque = NULL;

  00007	48 c7 41 38 00
	00 00 00	 mov	 QWORD PTR [rcx+56], 0
  0000f	48 89 01	 mov	 QWORD PTR [rcx], rax
  00012	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_read_file_func
  00019	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_write_file_func
  00024	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
  00028	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_tell64_file_func
  0002f	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
  00033	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_seek64_file_func
  0003a	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax
  0003e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_close_file_func
  00045	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax
  00049	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_error_file_func
  00050	48 89 41 30	 mov	 QWORD PTR [rcx+48], rax

; 435  : }

  00054	c3		 ret	 0
fill_win32_filefunc64 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\projectsgit\gamecode4\source\gcc4\3rdparty\zlib-1.2.8\contrib\minizip\iowin32.c
;	COMDAT fill_win32_filefunc64A
_TEXT	SEGMENT
pzlib_filefunc_def$ = 8
fill_win32_filefunc64A PROC				; COMDAT

; 440  :     pzlib_filefunc_def->zopen64_file = win32_open64_file_funcA;

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_open64_file_funcA

; 441  :     pzlib_filefunc_def->zread_file = win32_read_file_func;
; 442  :     pzlib_filefunc_def->zwrite_file = win32_write_file_func;
; 443  :     pzlib_filefunc_def->ztell64_file = win32_tell64_file_func;
; 444  :     pzlib_filefunc_def->zseek64_file = win32_seek64_file_func;
; 445  :     pzlib_filefunc_def->zclose_file = win32_close_file_func;
; 446  :     pzlib_filefunc_def->zerror_file = win32_error_file_func;
; 447  :     pzlib_filefunc_def->opaque = NULL;

  00007	48 c7 41 38 00
	00 00 00	 mov	 QWORD PTR [rcx+56], 0
  0000f	48 89 01	 mov	 QWORD PTR [rcx], rax
  00012	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_read_file_func
  00019	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_write_file_func
  00024	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
  00028	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_tell64_file_func
  0002f	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
  00033	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_seek64_file_func
  0003a	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax
  0003e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_close_file_func
  00045	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax
  00049	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_error_file_func
  00050	48 89 41 30	 mov	 QWORD PTR [rcx+48], rax

; 448  : }

  00054	c3		 ret	 0
fill_win32_filefunc64A ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\projectsgit\gamecode4\source\gcc4\3rdparty\zlib-1.2.8\contrib\minizip\iowin32.c
;	COMDAT fill_win32_filefunc64W
_TEXT	SEGMENT
pzlib_filefunc_def$ = 8
fill_win32_filefunc64W PROC				; COMDAT

; 453  :     pzlib_filefunc_def->zopen64_file = win32_open64_file_funcW;

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_open64_file_funcW

; 454  :     pzlib_filefunc_def->zread_file = win32_read_file_func;
; 455  :     pzlib_filefunc_def->zwrite_file = win32_write_file_func;
; 456  :     pzlib_filefunc_def->ztell64_file = win32_tell64_file_func;
; 457  :     pzlib_filefunc_def->zseek64_file = win32_seek64_file_func;
; 458  :     pzlib_filefunc_def->zclose_file = win32_close_file_func;
; 459  :     pzlib_filefunc_def->zerror_file = win32_error_file_func;
; 460  :     pzlib_filefunc_def->opaque = NULL;

  00007	48 c7 41 38 00
	00 00 00	 mov	 QWORD PTR [rcx+56], 0
  0000f	48 89 01	 mov	 QWORD PTR [rcx], rax
  00012	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_read_file_func
  00019	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_write_file_func
  00024	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
  00028	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_tell64_file_func
  0002f	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
  00033	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_seek64_file_func
  0003a	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax
  0003e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_close_file_func
  00045	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax
  00049	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:win32_error_file_func
  00050	48 89 41 30	 mov	 QWORD PTR [rcx+48], rax

; 461  : }

  00054	c3		 ret	 0
fill_win32_filefunc64W ENDP
_TEXT	ENDS
END
